Practical One

Reciever
package practicall.one;

import java.io.*;
import java.net.*;


public class Receiver {
    public static void main(String[] args) throws Exception {
        String ct="",pt="";
        ServerSocket skt=new ServerSocket(6017);
        Socket sc=skt.accept();
        int i=0;
        System.out.println("Entered string ");
        BufferedReader br= new BufferedReader(new InputStreamReader(sc.getInputStream()));
        ct=br.readLine();
        String[] s=new String[ct.length()];
        s=ct.split(",");   
        int[] j=new int[s[0].length()];
        System.out.println(" message:"+s[0]);
        for(i=0;i<s[0].length();i++)
        {
        j[i]=Integer.parseInt(s[i+1]);
        System.out.println(" key="+j[i]);
        }
        for(i=0;i<s[0].length();i++)
        {
        System.out.println("j="+j[i]);
        pt+=(char)(s[0].charAt(i)-j[i]);
        }
        System.out.println("Message from Sender: "+pt);
    }
}









Sender.java

package practicall.one;

import java.io.*;
import java.util.*;
import java.net.*;
public class Sender {

    public static void main(String[] args) throws Exception{
        String s="";
        String ct="";
        String key="";
        Socket sc=new Socket("localhost",6017);
        Random r=new Random();
        int i=0,k=0;
        System.out.println("Enter the string");
        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(sc.getOutputStream()));
        s=br.readLine();
        int j[]=new int[s.length()];
        for(i=0;i<s.length();i++)
        {
            j[k]=r.nextInt(50);
            key+=Integer.valueOf(j[k])+",";
            System.out.println("j="+j[k]);
            ct+=(char)(s.charAt(i)+j[k]);
            k++;
        }
        System.out.println(key);
        System.out.println(ct);
        bw.write(ct + "," + key);
        bw.flush();
        bw.close();
    }
    
}

Practical 4

DriveXML

1. Click on Backup
2. Select a Drive to Backup
3. Click on Next
4. Provide SavedFile name and Location
5. Click on Next



Practical Five


Logger.java


package practical.five;

import java.io.*;
import java.util.logging.*;

public class mylogger {

    public static void main(String[] args) throws IOException {
        
Logger l=Logger.getLogger(mylogger.class.getName());
FileHandler fh;
try
{
fh=new FileHandler("c:/users/ankur/desktop/mylogfile.log",true);
l.addHandler(fh);
l.setLevel(Level.ALL);
SimpleFormatter sf=new SimpleFormatter();
fh.setFormatter(sf);
l.info("My first log");
}
catch(IOException e)
{
e.printStackTrace();
}

l.info("Hi How r u?");
}
    
}




Practical Six

File Search

package practical.six;

import java.io.*;


public class FileSearch {
public static void main(String[] args) throws IOException {
String d="";
final String f;
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
System.out.println("Enter the directory ");
d=br.readLine();
System.out.println("Enter the filter");
f=br.readLine();
File dir=new File(d);
FilenameFilter filter=new FilenameFilter(){
@Override
public boolean accept(File dir,String name){
return name.startsWith(f);
}
};
String[] children=dir.list(filter);
if(children==null){
System.out.println("Not found");
}else{
for(int i=0;i<children.length;i++){
String filename=children[i];
System.out.println(filename);
 }
 }
 }
    
}



Autopsy

Aim:    Recovering and Inspecting deleted files  

-Check for Deleted Files  
-Recover the Deleted Files  
-Analyzing and Inspecting the recovered files  

Step 1: Start Autopsy from Desktop. 


Step 2: Now create on New Case. 


Step 3: Enter the New case Information and click on Next Button. 



Step 4: Enter the additional Information and click on Finish. 


Step 5: Now Select Source Type as Local disk and Select Local disk form drop down list and click on Next. 


Step 6: Click on Next Button. 


Step 7: Now click On Finish. 



Step 8: Now Autopsy window will appear and it will analyzing the disk that we have selected. 


Step 9: All files will appear in table tab select any file to see the data. 


Step 10:Expand the tree from left side panel to view the document files. 



Step 11: To recover the file, go to view node-> Deleted Files node , here select any file and right click on it than select Extract Files option. 



Step 12: By default Export folder is choose to save the recovered file. 


Sep 13 : Now Click on Ok.



Step 14: Now go to the Export Folder to view Recover file. 


Step 15: Click on Generate Report from autopsy window and Select the Excel format and click on next. 



Step 16: Now Report is Generated So click on close Button .we can see the Report on Report Node. 



Step 17: Now open the Report folder and Open Excel File. 

















Practical Seven

Search Word


package practical.seven;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.InputStreamReader;

public class SearchWord {
public static void main(String[] args) {
       
 try
 {
 String str="";
 String ser="";
int flag=0;
BufferedReader br=new BufferedReader(new FileReader("C:\\Users\\ankur\\Desktop\\file.txt"));
BufferedReader br1=new BufferedReader(new InputStreamReader(System.in));
str=br.readLine();
 String [] s = new String[str.length()];
System.out.println("enter the text u want to search");
ser=br1.readLine();
 s=str.split(" ");
for(int i=0;i<s.length;i++)
 {
if(ser.equalsIgnoreCase(s[i]))
 {
System.out.println("Text "+ser+" Found");
flag=1;
 }
 }
if(flag==0)
System.out.println("Text "+ser+" Not Found");
 }
catch(Exception e)
 {
System.out.println(e);
 }
 }  
}

Practical Eight

AccessDataFTK



1. Goto File. Create image.
2. Choose Contents of a folder. Click next. Say yes.
3. Select Image Source(Any Drive will do), Add Evidence Item info(Anything will work)
4. Select Destination Folder, and Provide a name for the image file.
5. Click on finish.
6. At home, goto File and Add Evidence item.
7. Choose image file, and then look for your image file at the Destination described in Step 4. Select.
8. Done


Practical Nine

Aim: Registry Editor

1. For wireless evidence in the registry:

hkey.localmachine.software.microsoft.windowsnt.currentversion.networklist.profiles

2. For recentdocs

hkey.currentuser.software.microsoft.windows.currentversion.explorer.recentdocs

3. For typed URLs

hkey.currentuser.software.microsoft.internetexplorer.typedurls

4. For IP Addresses

hkey.localmachine.system.services.currentcontrolset.services.tcpip.parameters.interface

5. For start up locations in the registry

hkey.localmachine.software.microsoft.windows.currentversion.run

6. For RunOnce startup

hkey.localmachine.software.microsoft.windows.currentversion.runonce

7. For start up services

hkey.localmachine.system.currentcontrolset.services

8.For start legacy applications

hkey.localmachine.system.currentcontrolset.control.wow

9. To start when a particular user logs on

hkey.currentusre.software.microsoft.windows.currentversion.run

10. For USB storage devices

hk.localmachine.system.controlsets00s.enum.usbstor

11. For mounted devices

hkey.localmachine.system.mounteddevices


Practical Ten

Virus

package practical.ten;

import java.io.FileWriter;
import java.io.IOException;

public class Virus {

    public static void main(String[] args) {
       try
{
FileWriter fw=new FileWriter("D:/virus.dll",true);
while(true)
{
fw.write("virus has been activated");
}
}
catch(IOException e)
{
e.printStackTrace();
}
   }
    
}


